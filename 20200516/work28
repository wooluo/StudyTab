0511
8:30-11:30
tue 
工作周报李镇邦 20200506~20200509
1. WARP-43339: [guardian]升级脚本修改，用户旧版本升级到新版本 密码策略可直接简单修改生效
2. WARP-43659: [guardian]整理resource-manager单测提升版本提交
3. WARP-41627: [guardian]修改getAuthorizedDataNodes接口，取消使用性能低的接口

本周：
1. guardian项目提升
2. 开始做sla支持


jdbc:mysql://tw-node599:8320,tw-node597:8320,tw-node598:8320/guardian?allowMultiQueries=true&useUnicode=true&amp;characterEncoding=utf8&autoReconnect=true


jdbc:mysql://172.26.5.99:8320/guardian?characterEncoding=UTF-8&allowMultiQueries=true

unset {http,https,ftp}_proxy

$ env | grep -i proxy
NO_PROXY=localhost,127.0.0.0/8,127.0.1.1
http_proxy=http://192.168.1.250:8080/
FTP_PROXY=ftp://192.168.1.250:8080/
ftp_proxy=ftp://192.168.1.250:8080/
all_proxy=socks://192.168.1.250:8080/
ALL_PROXY=socks://192.168.1.250:8080/
HTTPS_PROXY=https://192.168.1.250:8080/
https_proxy=https://192.168.1.250:8080/
no_proxy=localhost,127.0.0.0/8,127.0.1.1
HTTP_PROXY=http://192.168.1.250:8080/  

cas怎么读guardian-cas配置的
cas-configuration-server-env.sh覆盖配置 在etc/guardian/conf路径下
覆盖guardian-cas的cas.properties属性


http://172.16.1.97:8080/remote.php/webdav/TRANSWARP_RELEASES/INTERNAL/KUNDB/kundb-1.3/IMAGE/centos-7/2020-03-30_00-07-30/KUNDB-Image-Registry-Transwarp-1.3.tar.gz

docker pull 172.16.1.99/transwarp/guardian-gencerts:guardian-3.1.2-final

本地登陆kundb
mysql -h172.16.1.236 -P15307 -uadmin -padmin --enable-cleartext-plugin --ssl-ca=/home/transwarp/go/src/github.com/youtube/vitess/examples/local_mfed/sub_scripts/ca-cert.pem --ssl-cert=/home/transwarp/go/src/github.com/youtube/vitess/examples/local_mfed/sub_scripts/kungate-client-cert.pem --ssl-key=/home/transwarp/go/src/github.com/youtube/vitess/examples/local_mfed/sub_scripts/kungate-client-key.pem --ssl-mode=VERIFY_CA

测试kundb登陆与guatdian
研究cas与guardian-cas的配置
支持

kundb1.2-final
guardian界面新建用户vt_app登陆
mysql -h172.26.2.15 -P15307 -ut_app -p123 --enable-cleartext-plugin -A
show databases;指令正常
create user kundb_test;
mysql -h172.26.2.15 -P15307 -ukundb_test -p123 --enable-cleartext-plugin -A
登陆成功

kundb1.3-final
vt_app登陆
mysql -h172.26.2.15 -P15307 -uvt_app -p123 --enable-cleartext-plugin --ssl-ca=/home/transwarp/go/src/github.com/youtube/vitess/examples/local_mfed/sub_scripts/ca-cert.pem --ssl-cert=/home/transwarp/go/src/github.com/youtube/vitess/examples/local_mfed/sub_scripts/kungate-client-cert.pem --ssl-key=/home/transwarp/go/src/github.com/youtube/vitess/examples/local_mfed/sub_scripts/kungate-client-key.pem --ssl-mode=VERIFY_CA
show databases;指令正常
create user kundb_test;
mysql -h172.26.2.15 -P15307 -ukundb_test -p123 --enable-cleartext-plugin --ssl-ca=/home/transwarp/go/src/github.com/youtube/vitess/examples/local_mfed/sub_scripts/ca-cert.pem --ssl-cert=/home/transwarp/go/src/github.com/youtube/vitess/examples/local_mfed/sub_scripts/kungate-client-cert.pem --ssl-key=/home/transwarp/go/src/github.com/youtube/vitess/examples/local_mfed/sub_scripts/kungate-client-key.pem --ssl-mode=VERIFY_CA
登陆成功


curl -X GET -u zhenbang.li:123456 "http://172.16.1.97:8080/remote.php/webdav/TRANSWARP_RELEASES/OFFICIAL/TDH/transwarp-6.2.1-final/IMAGE/centos-7/TDH-Image-Registry-Transwarp-6.2.1-final.tar.gz" > /root/Kundb-1.3.0-final.tar.gz

2. 在其中通过export环境变量的方式加入下列环境变量
例：export CAS_AUTHN_JDBC_QUERY_URL="jdbc:mysql://IP:PORT/DB_NAME?autoReconnect=true&useSSL=false"

安装teamviewer--sudo apt-get update
sudo apt-get install -f
Errors were encountered while processing:
 mysql-common
touch /etc/mysql/my.cnf.fallback
sudo dpkg -i teamviewer_15.5.3_amd64.deb 

cas-server-env.sh改变配置->guardian-cas(cas.properties.tmpl)->getenv

cas本身是sso
guardian client支持ha，http分布式session对性能会有影响 

sudo apt-get install docker-ce=5:19.03.8~3-0~ubuntu-xenial docker-ce-cli=5:19.03.8~3-0~ubuntu-xenial containerd.io
5:19.03.8~3-0~ubuntu-xenial

docker run -d -p 3305:3306 --name transwarp-mysql -e MYSQL_ROOT_PASSWORD=Transwarp01! -d 172.16.1.99/gold/mysql:transwarp-5.1

- /srv/guardian:/srv/guardian  /srv/guardian/server.keystore:/srv/guardian/server.keystore
1. tdc参数怎么在guardian里做映射
2. cas



spring boot/apacheds-ldap/hdfs/hbase/yarn/cas/kerberos/kms/bash/mysql/http
java/golang

curl -X GET -u zhenbang.li:123456 "http://172.16.1.97:8080/remote.php/webdav/TRANSWARP_RELEASES/OFFICIAL/TDH/transwarp-6.2.1-final/IMAGE/centos-7/TDH-Image-Registry-Transwarp-6.2.1-final.tar.gz" > /var/lib/docker/TDH.tar.gz

docker pull 172.16.1.99/transwarp/hdfs:transwarp-6.2.1-final
docker tag tw-node1236:5000/transwarp/hdfs:transwarp-6.2.1-final
docker push


docker pull tw-node1236:5000/transwarp/workflow:transwarp-6.2.0-final

harbor帐号lishinho@asagi.waseda.jp

yarn 自带了两个支持多用户、多队列的调度器，分别是 Capacity Scheduler（容量调度器） 和 Fair Scheduler（公平调度器)
Capacity Scheduler 资源分配策略
资源分配策略也就是当出现空闲资源时，应该在哪个队列给哪个 Application 分配资源。Capacity Scheduler 采用三级资源分配策略，它会一次选择队列、应用程序和 Container 使用该资源
其中Fair Scheduler是资源池机制，进入到里面的应用是共享pool里面的资源；只有当资源配比发生紧张的时候，才会根据权重来进行调整；
　　Capacity则是基于队列的，每个队列都会被分配资源比例，这种资源比例是固定；所以没有资源共享的概念

　　Fair Scheduler是一个池子的概念，就是来了一个应用就扔到这个池子里面，大家共享这个池子里面的资源；Fair Scheduler提供了一种Weigth的概念，就是比重，最后鬼根据比重来为各个池子分配资源（本质和Capacity里面的capacity一样）；同时她还提供了max resource，min resource的可选配置，就是制定资源下限和上限；这个属性的配置是可以覆盖weigth（权重）的。但是并不推荐使用max min资源配置，因为不够灵活；
　　Capacity Scheduler是一个队列概念，来了一个应用，如果发现资源不够了，则根据FIFO规则排队；什么时候资源够了，再用。
　　Fair Scheduler可以配置自动创建pool，但是Capacity则无法创建队列；其实本质差别就是在于一个是pool共享资源的概念（YARN-3319），一个是queue队列形式利用资源。或者这么解释，对于Fair而言，可以使用资源池中未被使用的资源，但是Capacity则不允许；所以前者比较灵活，后者相对古板。但是通过看到Capacity有计划也实现一版fairness appliction；如果真是这样，那么两者区别就变得很小了。

比较新的tdc版本guardian server的配置
配额添加队列激活队列在guardian上可用么
 13  kinit test
   14  kinit test1
   15  klist
   16  yarn node -all -list
   17  kinit admin
   18  kinit test1
   19  klist
   20  yarn node -all -list
   21  kinit vt_app
   22  yarn application -list -appStates ALL
   23  hadoop fs -ls /
   24  hadoop fs -mkdir -p /tmp/wordcount
   25  touch 1.txt
   26  ls
   27  hadoop fs -put ./1.txt /tmp/wordcount
   28  hadoop fs -ls /tmp/wordcount
   29  ls /
   30  find / -name hadoop-map*
   31  hadoop jar /usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples-2.7.2-transwarp-6.2.1.jar wordcount /tmp/wordcount /tmp/wordcount_output
   32  history 20
yarn application -list -appStates ALL


hadoop jar /usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples-2.7.2-transwarp-6.2.1.jar wordcount /tmp/wordcount /tmp/wordcount_output

对于global对象无access权限的用户在guardian界面上看不到yarn资源，但在集群通过kerberos认证可以执行yarn node -all -list,执行yarn rmadmin指令报没权限

对于global对象有access权限的用户在guardian界面上可见yarn资源，在集群通过kerberos认证可以执行yarn node -all -list, 执行yarn rmadmin指令报没权限

对于global对象有admin权限的用户在guardian界面上可见yarn资源，在集群通过kerberos认证可以执行yarn node -all -list, 可以执行yarn rmadmin指令

对queue/global有submit权限的可以提交任务到队列
对queue有admin权限的用户 可以赋予本队列及其子队列的权限给其他principal
对queue没有admin权限的用户 不可以赋予本队列及其子队列的权限给其他principal
有关创建队列的submit权限 和queue对象admin权限的“可以杀掉本队列的任务，及其子队列的任务” 和配额界面创建队列没有测
Q：
可以给自己取消权限？
对global没有access权限可以对queue有admin权限？
可以杀掉本队列的任务，及其子队列的任务？

goroutine是用户态的线程切换，java采用的是系统线程切换，用汇编语言描述是一个(java)调用int 80软中断,一个没有。 意味着goroutine更轻量级，可以同时相应成千上万的线程切换，java你创造上千个线程就有些吃力了。

cas/guardian-cas
tdh/application-metainfo
tdc/application-helmcharts

1. 语言的强类型弱类型
2. yarn队列
3. 单点登陆SSO


单系统登录解决方案的核心是cookie，cookie携带会话id在浏览器与服务器之间维护会话状态。但cookie是有限制的，这个限制就是cookie的域（通常对应网站的域名），浏览器发送http请求时会自动携带与该域匹配的cookie，而不是所有cookie
可行并不代表好，共享cookie的方式存在众多局限。首先，应用群域名得统一；其次，应用群各系统使用的技术（至少是web服务器）要相同，不然cookie的key值（tomcat为JSESSIONID）不同，无法维持会话，共享cookie的方式是无法实现跨语言技术平台登录的，比如java、php、.net系统之间；第三，cookie本身不安全。

io.transwarp.guardian:guardian-client:jar:guardian-3.1.3
[INFO] +- io.transwarp.guardian:guardian-common:jar:guardian-3.1.3:compile
[INFO] |  \- io.swagger:swagger-annotations:jar:1.5.9:compile
[INFO] +- org.apache.httpcomponents:httpclient:jar:4.2.5:compile
[INFO] |  +- commons-logging:commons-logging:jar:1.1.1:compile
[INFO] |  \- commons-codec:commons-codec:jar:1.6:compile
[INFO] +- org.apache.httpcomponents:httpcore:jar:4.2.5:compile
[INFO] +- com.fasterxml.jackson.core:jackson-core:jar:2.9.5:compile
[INFO] +- com.fasterxml.jackson.core:jackson-databind:jar:2.9.5:compile
[INFO] +- com.fasterxml.jackson.core:jackson-annotations:jar:2.9.5:compile
[INFO] +- com.google.guava:guava:jar:18.0:compile
[INFO] +- commons-io:commons-io:jar:2.4:compile
[INFO] +- org.apache.hadoop:hadoop-common:jar:2.7.2-transwarp-6.0.0:provided
[INFO] |  +- org.jasig.cas.client:cas-client-core:jar:3.5.1-guardian-3.1.3:provided (version managed from 3.5.1-transwarp-6.0.0-SNAPSHOT)
[INFO] |  +- org.apache.hadoop:hadoop-annotations:jar:2.7.2-transwarp-6.0.0:provided
[INFO] |  |  \- jdk.tools:jdk.tools:jar:1.8:system
[INFO] |  +- io.netty:netty-all:jar:4.1.5.transwarp:provided
[INFO] |  +- org.apache.commons:commons-math3:jar:3.1.1:provided
[INFO] |  +- xmlenc:xmlenc:jar:0.52:provided
[INFO] |  +- commons-httpclient:commons-httpclient:jar:3.1:provided
[INFO] |  +- commons-net:commons-net:jar:3.1:provided
[INFO] |  +- commons-collections:commons-collections:jar:3.2.2:provided
[INFO] |  +- javax.servlet:servlet-api:jar:2.5:provided
[INFO] |  +- org.mortbay.jetty:jetty:jar:6.1.26:provided
[INFO] |  +- org.mortbay.jetty:jetty-util:jar:6.1.26:provided
[INFO] |  +- org.mortbay.jetty:jetty-sslengine:jar:6.1.26:provided
[INFO] |  +- javax.servlet.jsp:jsp-api:jar:2.1:provided
[INFO] |  +- com.sun.jersey:jersey-core:jar:1.9:provided
[INFO] |  +- com.sun.jersey:jersey-json:jar:1.9:provided
[INFO] |  |  +- org.codehaus.jettison:jettison:jar:1.1:provided
[INFO] |  |  +- com.sun.xml.bind:jaxb-impl:jar:2.2.3-1:provided
[INFO] |  |  |  \- javax.xml.bind:jaxb-api:jar:2.2.2:provided
[INFO] |  |  |     \- javax.xml.stream:stax-api:jar:1.0-2:provided
[INFO] |  |  +- org.codehaus.jackson:jackson-jaxrs:jar:1.8.3:provided
[INFO] |  |  \- org.codehaus.jackson:jackson-xc:jar:1.8.3:provided
[INFO] |  +- com.sun.jersey:jersey-server:jar:1.9:provided
[INFO] |  |  \- asm:asm:jar:3.1:provided
[INFO] |  +- log4j:log4j:jar:1.2.17:provided
[INFO] |  +- net.java.dev.jets3t:jets3t:jar:0.9.0:provided
[INFO] |  |  \- com.jamesmurty.utils:java-xmlbuilder:jar:0.4:provided
[INFO] |  +- commons-lang:commons-lang:jar:2.6:provided
[INFO] |  +- commons-configuration:commons-configuration:jar:1.6:provided
[INFO] |  |  +- commons-digester:commons-digester:jar:1.8:provided
[INFO] |  |  |  \- commons-beanutils:commons-beanutils:jar:1.9.2:provided (version managed from 1.7.0)
[INFO] |  |  \- commons-beanutils:commons-beanutils-core:jar:1.8.0:provided
[INFO] |  +- org.slf4j:slf4j-log4j12:jar:1.7.7:provided (version managed from 1.7.10)
[INFO] |  +- org.codehaus.jackson:jackson-core-asl:jar:1.9.13:provided
[INFO] |  +- org.codehaus.jackson:jackson-mapper-asl:jar:1.9.13:provided
[INFO] |  +- org.apache.avro:avro:jar:1.7.4:provided
[INFO] |  |  +- com.thoughtworks.paranamer:paranamer:jar:2.3:provided
[INFO] |  |  \- org.xerial.snappy:snappy-java:jar:1.0.4.1:provided
[INFO] |  +- com.google.protobuf:protobuf-java:jar:2.5.0:provided
[INFO] |  +- com.google.code.gson:gson:jar:2.2.4:provided
[INFO] |  +- org.apache.hadoop:hadoop-auth:jar:2.7.2-transwarp-6.0.0:provided
[INFO] |  |  \- net.java.dev.jna:jna:jar:4.2.1:provided
[INFO] |  +- com.jcraft:jsch:jar:0.1.54:provided
[INFO] |  +- org.apache.curator:curator-client:jar:2.7.1:provided
[INFO] |  +- org.apache.curator:curator-recipes:jar:2.7.1:provided
[INFO] |  +- com.google.code.findbugs:jsr305:jar:3.0.1:provided (version managed from 3.0.0)
[INFO] |  +- org.apache.htrace:htrace-core:jar:3.1.0-incubating:provided
[INFO] |  +- org.apache.zookeeper:zookeeper:jar:3.4.5-transwarp:provided
[INFO] |  +- org.apache.commons:commons-compress:jar:1.4.1:provided
[INFO] |  |  \- org.tukaani:xz:jar:1.0:provided
[INFO] |  +- dnw:dnw:jar:1.0.7:provided
[INFO] |  \- sk:sk:jar:0.0.1:provided
[INFO] +- org.jetbrains:annotations:jar:13.0:compile
[INFO] +- org.apache.directory.fortress:fortress-core:jar:1.0.0-guardian-3.1.3:test
[INFO] |  +- org.openldap:accelerator-api:jar:1.0-RC41:test
[INFO] |  +- org.openldap:accelerator-impl:jar:1.0-RC41:test
[INFO] |  +- org.apache.curator:curator-framework:jar:2.9.0:test
[INFO] |  +- org.json:json:jar:20090211:test
[INFO] |  +- net.sf.ehcache:ehcache-core:jar:2.6.11:test
[INFO] |  +- org.apache.commons:commons-pool2:jar:2.4.3:test
[INFO] |  +- org.apache.cxf:cxf-api:jar:2.7.18:test
[INFO] |  |  +- org.codehaus.woodstox:woodstox-core-asl:jar:4.4.1:test
[INFO] |  |  |  \- org.codehaus.woodstox:stax2-api:jar:3.1.4:test
[INFO] |  |  +- org.apache.ws.xmlschema:xmlschema-core:jar:2.1.0:test
[INFO] |  |  +- org.apache.geronimo.specs:geronimo-javamail_1.4_spec:jar:1.7.1:test
[INFO] |  |  \- wsdl4j:wsdl4j:jar:1.6.3:test
[INFO] |  +- javax.ws.rs:javax.ws.rs-api:jar:2.0.1:test
[INFO] |  +- org.apache.directory.api:api-ldap-client-api:jar:1.0.0-RC1-guardian-3.1.3:test
[INFO] |  |  +- org.apache.directory.api:api-ldap-schema-data:jar:1.0.0-RC1-guardian-3.1.3:test
[INFO] |  |  +- org.apache.directory.api:api-ldap-codec-core:jar:1.0.0-RC1-guardian-3.1.3:test
[INFO] |  |  +- org.apache.directory.api:api-ldap-extras-aci:jar:1.0.0-RC1-guardian-3.1.3:test
[INFO] |  |  +- org.apache.directory.api:api-ldap-extras-codec:jar:1.0.0-RC1-guardian-3.1.3:test
[INFO] |  |  +- org.apache.directory.api:api-ldap-extras-codec-api:jar:1.0.0-RC1-guardian-3.1.3:test
[INFO] |  |  \- org.apache.mina:mina-core:jar:2.0.13:test
[INFO] |  +- org.apache.directory.api:api-ldap-codec-standalone:jar:1.0.0-RC1-guardian-3.1.3:test
[INFO] |  |  \- org.apache.directory.api:api-ldap-net-mina:jar:1.0.0-RC1-guardian-3.1.3:test
[INFO] |  +- org.apache.ant:ant:jar:1.9.6:test
[INFO] |  |  \- org.apache.ant:ant-launcher:jar:1.9.6:test
[INFO] |  +- org.jasypt:jasypt:jar:1.9.2:test
[INFO] |  +- org.jgrapht:jgrapht-core:jar:0.9.1:test
[INFO] |  \- javax:javaee-api:jar:7.0:test
[INFO] |     \- com.sun.mail:javax.mail:jar:1.5.0:test
[INFO] |        \- javax.activation:activation:jar:1.1:test
[INFO] +- org.apache.directory.server:apacheds-kerberos-codec:jar:2.0.0-M23-guardian-3.1.3:test
[INFO] |  +- org.apache.directory.server:apacheds-i18n:jar:2.0.0-M23-guardian-3.1.3:test
[INFO] |  +- org.apache.directory.api:api-asn1-api:jar:1.0.0-RC1-guardian-3.1.3:test
[INFO] |  +- org.apache.directory.api:api-asn1-ber:jar:1.0.0-RC1-guardian-3.1.3:test
[INFO] |  +- org.apache.directory.api:api-i18n:jar:1.0.0-RC1-guardian-3.1.3:test
[INFO] |  +- org.apache.directory.api:api-ldap-model:jar:1.0.0-RC1-guardian-3.1.3:test
[INFO] |  |  \- org.apache.servicemix.bundles:org.apache.servicemix.bundles.antlr:jar:2.7.7_5:test
[INFO] |  +- org.apache.directory.api:api-util:jar:1.0.0-RC1-guardian-3.1.3:test
[INFO] |  \- net.sf.ehcache:ehcache:jar:2.8.5:test
[INFO] +- com.nimbusds:nimbus-jose-jwt:jar:3.10:test
[INFO] |  +- net.jcip:jcip-annotations:jar:1.0:test
[INFO] |  +- net.minidev:json-smart:jar:1.3.1:test
[INFO] |  \- org.bouncycastle:bcprov-jdk15on:jar:1.52:test
[INFO] +- org.slf4j:slf4j-api:jar:1.7.7:compile
[INFO] \- junit:junit:jar:4.11:test
[INFO]    \- org.hamcrest:hamcrest-core:jar:1.3:test

[INFO] --- maven-dependency-plugin:2.1:tree (default-cli) @ guardian-common ---
[INFO] io.transwarp.guardian:guardian-common:jar:guardian-3.1.3
[INFO] +- io.swagger:swagger-annotations:jar:1.5.9:compile
[INFO] +- org.slf4j:slf4j-api:jar:1.7.7:compile
[INFO] \- junit:junit:jar:4.11:test
[INFO]    \- org.hamcrest:hamcrest-core:jar:1.3:test


1. com.google.guava:guava:jar:18.0:compile -> 24.1.1  
2. jackson-databind-2.9.5.jar ->2.9.10.4
3. org.apache.httpcomponents:httpclient:jar:4.2.5->4.3.6



<version>4.3.6</version>

huntress
          <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>5.2.4</version>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.48</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <enableExperimental>true</enableExperimental>
                    <databaseDriverName>com.mysql.jdbc.Driver</databaseDriverName>
                    <connectionString>jdbc:mysql://172.26.0.104:33306/dependencycheck?useSSL=false</connectionString>
                    <databaseUser>dcscanner</databaseUser>
                    <databasePassword>Dependencycheck@123</databasePassword>
                    <failBuildOnAnyVulnerability>true</failBuildOnAnyVulnerability>
                    <autoUpdate>false</autoUpdate>
                    <versionCheckEnabled>false</versionCheckEnabled>
                    <pathToGo>/path/to/go</pathToGo>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

 mvn dependency-check:check

[root@tw-node1236 ~]# hadoop version
Hadoop 2.7.2-transwarp-6.2.1
Subversion http://172.16.1.41:10080/hadoop/hadoop-2.7.2-transwarp.git -r 18d4007c75c725022c85024f3d4d26862d98be7c
Compiled by jenkins on 2019-11-12T08:03Z
Compiled with protoc 2.5.0
From source with checksum 42cb923f1631e3c548d6b7e572aa6962
This command was run using /usr/lib/hadoop/hadoop-common-2.7.2-transwarp-6.2.1.jar

kernel->shell

Thread.currentThread().getContextClassLoader().getResourceAsStream(fileName) ：每一个Thread都有一个context classloader与之对应，这个contextloader类是由父进程提供的，默认的contextloader为父进程的context classloader。如果在整个Thread结构中，你都没有通过Thread类的构造函数初始化某个Thread 的context classloader的话，那么，整个Thread的context classloader都将默认是system classloader。








// get component version info
            Properties info = new Properties();
            String versionInfoFile = "inceptor-version-info.properties";
            InputStream is = null;
            try {
              is = Thread.currentThread().getContextClassLoader()
                  .getResourceAsStream(versionInfoFile);
              if (is == null) {
                throw new IOException("Resource not found");
              }
              info.load(is);
            } catch (IOException ex) {
              LogFactory.getLog(getClass()).warn("Could not read '" +
                  versionInfoFile + "', " + ex.toString(), ex);
            } finally {
              IOUtils.closeStream(is);
            }
            configs.put("version", info.getProperty("version", "Unknown"));


docker-compose -f docker-compose-simple.yml up -d(同一目录下docker-compose文件与指定yaml合并）
docker-compose up -d
docker-compose config


// get component version info
    var versionInfo = new Properties()
    val versionInfoFile = "kafka-version-info.properties"
    var is = null
     try {
       is = Thread.currentThread().getContextClassLoader()
         .getResourceAsStream(versionInfoFile);
       if (is == null) {
         authorizerLogger.error(s"Resource not found")
       }
       versionInfo.load(is)
     } catch {
       case e : IOException =>
         authorizerLogger.warn(s"Could not read ${versionInfoFile}, ${e.toString}")
     } finally {

     }
     configs.put("version", info.getProperty("version", "Unknown"))


<executions>
          <execution>
            <id>version-info</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>version-info</goal>
            </goals>
            <configuration>
              <source>
                <directory>${basedir}/src/main</directory>
                <includes>
                  <include>java/**/*.java</include>
                  <include>proto/**/*.proto</include>
                </includes>
              </source>
            </configuration>
          </execution>
<executions>
MAVEN属性
事实上有六种类型的Maven属性：

内置属性：主要有两个常用内置属性——${basedir}表示项目根目录，即包含pom.xml文件的目录;${version}表示项目版本。
POM属性：pom中对应元素的值。例如${project.artifactId}对应了<project><artifactId>元素的值。具体有哪些POM属性可以用，可以查看本页末的附件——超级POM
自定义属性：在pom中<properties>元素下自定义的Maven属性。例如
 

<project>  
        <properties>  
            <my.prop>hello</my.prop>  
        </properties>  
    </project>
Settings属性：与POM属性同理。如${settings.localRepository}指向用户本地仓库的地址。
Java系统属性：所有Java系统属性都可以使用Maven属性引用，例如${user.home}指向了用户目录。可以通过命令行mvn help:system查看所有的Java系统属性
环境变量属性：所有环境变量都可以使用以env.开头的Maven属性引用。例如${env.JAVA_HOME}指代了JAVA_HOME环境变量的值。也可以通过命令行mvn help:system查看所有环境变量。
 

资源过滤
maven的properties filter功能可以帮你自动替换配置文件中以$｛｝包裹的变量。

为了方便构建不同的环境，我们通常将不同的配置以properties形式配置在pom 中。

默认情况下，Maven属性只有在POM中才会被解析。资源过滤就是指让Maven属性在资源文件(src/main/resources、src/test/resources)中也能被解析。

在POM中添加下面的配置便可以开启资源过滤


hbase.defaults.for.version
META-INF/maven/groupId/artifactId/pom.properties

jackson fasterxml mavenVersionFor
    String version = VersionUtil.mavenVersionFor(GuardianAuthManager.class.getClassLoader(), "io.transwarp.guardian", "hyperbase-plugin").toString();

META-INF
相当于一个信息包，目录中的文件和目录获得Java 2平台的认可与解释，用来配置应用程序、扩展程序、类加载器和服务manifest.mf文件，在用jar打包时自动生成
